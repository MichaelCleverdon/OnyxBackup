1.1 Using Python
A) wheil x < y (typo)
B) x '1xabc' (instead of x = '1xabc')
C) 
x = 10

def method()
	x = 5
	print(x)
#it will print 5 instead of 10, but the programmer meant to print out 10

D) 
defaultWidth = 10

userDefinedWidth = //user input//

#Forgetting to use the userDefinedWidth
createWindow(defaultWidth)



1.8 Make analysis
This sort of dependence management is accurate when File B is compltely utilized within File A and the code changed in File B is utilized in a working area of File A. However, if File B is simply a fringe method that is called rarely within File A, the work can be considered unnecessary. Also, if File B was modified in a way that doesn't modify any of the inherited code, recompiling File A is again unncessary. So, the overall accuracy is not as accurate as it would initially seem. The accuracy of make seems to drop even further when you consider that make only will recompile files if the programmer states that it is a direct dependent. This leads to quite a large share of human error because humans often overlook smaller details and that can cause these programs to break.

2.1 Regex

a) string => '"' (non-newline | \" | \\ )* '"'
b) pascalComment => ('*' (letter | digit)* '*' | { (letter | digit )* })
c) number => 0[0-7]* | 0(x|X)[0-9a-fA-F]+ | 0(x|X)[0-9a-fA-F]\.[0-9a-fA-F]*(p|P)(+|-)?[0-9]+ | 0(x|X)\.[0-9a-fA-F]*(p|P)(+|-)?[0-9]+ | [0-9]*[1-9]?{\. | e | E}?[0-9]*
d) float => [0-9]*#*[0-9a-fA-F\_]+\.[0-9a-fA-F\_]+#*(e|E)*(+|-)*[0-9]*
e) schemeInexact => ( \. [0-9]+#* | [0-9]+ #* \. [#0-9]*)
f) money => ($\**[0-9]+ \. *[0-9]{2} | $\**[0-9]{1-3}+(,[0-9]{3})*\.*[0-9]{2})
[Set] any character that matches that set (a-z is a through z)
{Number} Only allow the pattern to match for Number amount
? 0 or 1
+ 1 or many

2.13
b) stmt => foo stmt_tail
	    	=> foo ( id(a) 
	    	=> foo ( id(a) , id(b) stmt_tail
	    	=> foo ( id(a) , id(b) )
  

2.17 Modify grammar

ifBlock    : "if" condition "then" expr "fi"
condition  :  expr condOp expr
condOp     :  < | > | == | >= | <= | !=
while      : "while" condition "do" expr "od"
